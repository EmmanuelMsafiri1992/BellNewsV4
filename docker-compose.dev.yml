# docker-compose.dev.yml
# This file defines the multi-service Docker application for your Windows host (development/testing).
# It includes the main Python web app, the Laravel news app,
# and the Ubuntu configuration service (running in mock mode).

# Docker Compose file format version.
version: '3.8'

services:
  # Main Python Flask web application (bellapp)
  pythonapp:
    build: ./bellapp # Specifies the build context for the Python app
    ports:
      - "5000:5000" # Maps host port 5000 to container port 5000
    restart: always
    container_name: bellapp
    volumes:
      - ./bellapp/logs:/bellapp/logs # Mount logs for persistence
    depends_on:
      - config_service # Ensures config_service starts before pythonapp
    environment:
      # This points to the config_service container by its service name within the Docker network
      UBUNTU_CONFIG_SERVICE_URL: http://config_service:5002

  # Laravel news application
  laravelapp:
    build: ./newsapp
    environment:
      # Dynamically get the host's IP address and pass it to the container.
      # This command runs on the host machine.
      #
      # UNCOMMENT ONE of the following lines based on your operating system:
      # Linux Host:
      - HOST_IP=${HOST_IP:-$(ip route get 1 | awk '{print $7; exit}')}
      #
      # Docker Desktop on macOS/Windows:
      # - HOST_IP=host.docker.internal

      # VITE_API_BASE_URL points to the pythonapp service within the Docker network
      - VITE_API_BASE_URL=http://pythonapp:5000
      # Dynamically configure CORS allowed origins using the host IP
      - CORS_ALLOWED_ORIGINS=http://${HOST_IP}:8000,http://127.0.0.1:8000,http://localhost:8000,http://172.18.0.4:8000,http://192.168.33.3:8000
    ports:
      - "8000:8000"
      - "5173:5173"
    restart: always
    container_name: newsapp
    depends_on:
      - pythonapp

  # Ubuntu Configuration Service (running in Docker Test/Mock Mode)
  config_service:
    build:
      context: .
      dockerfile: Dockerfile_config # Use the new universal Dockerfile
    ports:
      - "5002:5002" # Expose port 5002 for the service
    restart: always
    container_name: config_service
